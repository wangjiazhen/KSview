<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.ks.sys.mapper.TblAuthMapper">
  <resultMap id="BaseResultMap" type="org.ks.sys.po.TblAuth">
    <id column="auth_id" jdbcType="BIGINT" property="authId" />
    <result column="auth_code" jdbcType="VARCHAR" property="authCode" />
    <result column="auth_name" jdbcType="VARCHAR" property="authName" />
    <result column="sys_code" jdbcType="VARCHAR" property="sysCode" />
    <result column="seq" jdbcType="INTEGER" property="seq" />
    <result column="use_flag" jdbcType="INTEGER" property="useFlag" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_acct" jdbcType="VARCHAR" property="createAcct" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_acct" jdbcType="VARCHAR" property="updateAcct" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    auth_id, auth_code, auth_name, sys_code, seq, use_flag, create_time, create_acct, 
    update_time, update_acct
  </sql>
  <select id="selectByExample" parameterType="org.ks.sys.po.TblAuthExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tbl_auth
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tbl_auth
    where auth_id = #{authId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tbl_auth
    where auth_id = #{authId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="org.ks.sys.po.TblAuthExample">
    delete from tbl_auth
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.ks.sys.po.TblAuth">
    insert into tbl_auth (auth_id, auth_code, auth_name, 
      sys_code, seq, use_flag, 
      create_time, create_acct, update_time, 
      update_acct)
    values (#{authId,jdbcType=BIGINT}, #{authCode,jdbcType=VARCHAR}, #{authName,jdbcType=VARCHAR}, 
      #{sysCode,jdbcType=VARCHAR}, #{seq,jdbcType=INTEGER}, #{useFlag,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createAcct,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{updateAcct,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.ks.sys.po.TblAuth">
    insert into tbl_auth
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="authId != null">
        auth_id,
      </if>
      <if test="authCode != null">
        auth_code,
      </if>
      <if test="authName != null">
        auth_name,
      </if>
      <if test="sysCode != null">
        sys_code,
      </if>
      <if test="seq != null">
        seq,
      </if>
      <if test="useFlag != null">
        use_flag,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createAcct != null">
        create_acct,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateAcct != null">
        update_acct,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="authId != null">
        #{authId,jdbcType=BIGINT},
      </if>
      <if test="authCode != null">
        #{authCode,jdbcType=VARCHAR},
      </if>
      <if test="authName != null">
        #{authName,jdbcType=VARCHAR},
      </if>
      <if test="sysCode != null">
        #{sysCode,jdbcType=VARCHAR},
      </if>
      <if test="seq != null">
        #{seq,jdbcType=INTEGER},
      </if>
      <if test="useFlag != null">
        #{useFlag,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createAcct != null">
        #{createAcct,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateAcct != null">
        #{updateAcct,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.ks.sys.po.TblAuthExample" resultType="java.lang.Long">
    select count(*) from tbl_auth
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tbl_auth
    <set>
      <if test="record.authId != null">
        auth_id = #{record.authId,jdbcType=BIGINT},
      </if>
      <if test="record.authCode != null">
        auth_code = #{record.authCode,jdbcType=VARCHAR},
      </if>
      <if test="record.authName != null">
        auth_name = #{record.authName,jdbcType=VARCHAR},
      </if>
      <if test="record.sysCode != null">
        sys_code = #{record.sysCode,jdbcType=VARCHAR},
      </if>
      <if test="record.seq != null">
        seq = #{record.seq,jdbcType=INTEGER},
      </if>
      <if test="record.useFlag != null">
        use_flag = #{record.useFlag,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createAcct != null">
        create_acct = #{record.createAcct,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateAcct != null">
        update_acct = #{record.updateAcct,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tbl_auth
    set auth_id = #{record.authId,jdbcType=BIGINT},
      auth_code = #{record.authCode,jdbcType=VARCHAR},
      auth_name = #{record.authName,jdbcType=VARCHAR},
      sys_code = #{record.sysCode,jdbcType=VARCHAR},
      seq = #{record.seq,jdbcType=INTEGER},
      use_flag = #{record.useFlag,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_acct = #{record.createAcct,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_acct = #{record.updateAcct,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.ks.sys.po.TblAuth">
    update tbl_auth
    <set>
      <if test="authCode != null">
        auth_code = #{authCode,jdbcType=VARCHAR},
      </if>
      <if test="authName != null">
        auth_name = #{authName,jdbcType=VARCHAR},
      </if>
      <if test="sysCode != null">
        sys_code = #{sysCode,jdbcType=VARCHAR},
      </if>
      <if test="seq != null">
        seq = #{seq,jdbcType=INTEGER},
      </if>
      <if test="useFlag != null">
        use_flag = #{useFlag,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createAcct != null">
        create_acct = #{createAcct,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateAcct != null">
        update_acct = #{updateAcct,jdbcType=VARCHAR},
      </if>
    </set>
    where auth_id = #{authId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.ks.sys.po.TblAuth">
    update tbl_auth
    set auth_code = #{authCode,jdbcType=VARCHAR},
      auth_name = #{authName,jdbcType=VARCHAR},
      sys_code = #{sysCode,jdbcType=VARCHAR},
      seq = #{seq,jdbcType=INTEGER},
      use_flag = #{useFlag,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_acct = #{createAcct,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_acct = #{updateAcct,jdbcType=VARCHAR}
    where auth_id = #{authId,jdbcType=BIGINT}
  </update>
</mapper>